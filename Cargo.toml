[package]
name = "freertos-std"
version = "0.0.1"
license = "MIT OR Apache-2.0"
repository = "https://github.com/sheref-sidarous/freertos-std"
description = "A Clone of the Rust Standard Library for FreeRTOS"
edition = "2021"
keywords = ["FreeRTOS", "std"]
categories = ["embedded", "os"]
readme = "README.md"

[lib]
crate-type = ["rlib"]

[dependencies]
cfg-if = { version = "1.0" }
libc = { version = "0.2.140", default-features = false }
compiler_builtins = { version = "0.1.91" }
hashbrown = { version = "0.14", default-features = false, features = ["rustc-internal-api"] }

# Dependencies of the `backtrace` crate
addr2line = { version = "0.17.0", optional = true, default-features = false }
rustc-demangle = { version = "0.1.21" }
miniz_oxide = { version = "0.5.0", optional = true, default-features = false }

# Added by sheref-sidarous, not part of upstream std
cortex-m-semihosting = {version = "0.5.0", optional = true}

[dependencies.object]
version = "0.29.0"
optional = true
default-features = false
features = ['read_core', 'elf', 'macho', 'pe', 'unaligned', 'archive']

[dev-dependencies]
rand = { version = "0.8.5", default-features = false, features = ["alloc"] }
rand_xorshift = "0.3.0"

[features]
backtrace = [
  "gimli-symbolize",
  'addr2line/rustc-dep-of-std',
  'object/rustc-dep-of-std',
  'miniz_oxide/rustc-dep-of-std',
]
gimli-symbolize = []


#compiler-builtins-c = ["alloc/compiler-builtins-c"]
#compiler-builtins-mem = ["alloc/compiler-builtins-mem"]
#compiler-builtins-no-asm = ["alloc/compiler-builtins-no-asm"]
#compiler-builtins-mangled-names = ["alloc/compiler-builtins-mangled-names"]
#llvm-libunwind = ["unwind/llvm-libunwind"]
#system-llvm-libunwind = ["unwind/system-llvm-libunwind"]

# Make panics and failed asserts immediately abort without formatting any message
panic_immediate_abort = []

# Added by sheref-sidarous, not part of upstream std
semihosted-stdio = ["cortex-m-semihosting"]
panic-unwind = []

[package.metadata.fortanix-sgx]
# Maximum possible number of threads when testing
threads = 125
# Maximum heap size
heap_size = 0x8000000

[[bench]]
name = "stdbenches"
path = "benches/lib.rs"
test = true
